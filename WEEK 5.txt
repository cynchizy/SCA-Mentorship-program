
/*QUESTION 1
Which city has the best customers?
We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns the 1 city that has the highest sum of invoice totals. 
Return both the city name and the sum of all invoice totals
*/

SELECT Customer.City,sum(Invoice.Total)
FROM Customer,Invoice
WHERE Customer.CustomerId=Invoice.CustomerId
GROUP BY Customer.City
ORDER BY sum(Invoice.Total)DESC
LIMIT 1;



/*QUESTION 2
Which countries have the most Invoices?
Use the Invoice table to determine the countries that have the most invoices. 
Provide a table of BillingCountry and Invoices ordered by the number of invoices for each country. 
The country with the most invoices should appear first
*/

SELECT BillingCountry, count(*) as Invoices
FROM Invoice
GROUP BY BillingCountry
ORDER BY Invoices DESC;



/*QUESTION 3
Who is the best customer?
The customer who has spent the most money will be declared the best customer. 
Build a query that returns the person who has spent the most money
*/

SELECT c.CustomerId, c.FirstName, c.LastName, sum(i.Total) as TotalSpent
FROM Customer AS c, Invoice AS i
WHERE c.CustomerId=i.CustomerId
GROUP BY i.CustomerId
ORDER BY TotalSpent DESC
LIMIT 1;


/*QUESTION 4
Use your query to return the email, first name, last name, and Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email address starting with A.
*/


SELECT DISTINCT c.Email As email, c.FirstName AS first_name, c.LastName AS last_name, g.Name As name
FROM Customer c JOIN Invoice i
ON c.CustomerId = i.CustomerId JOIN InvoiceLine il
ON i.InvoiceId =  il.InvoiceId JOIN Track t
ON il.TrackId = t.TrackId JOIN Genre G
ON T.GenreId = G.GenreId
WHERE G.Name = "Rock"
ORDER BY c.Email ;




/*QUESTION 5
 We want to find out the most popular music Genre for each country. 
 We determine the most popular genre as the genre with the highest amount of purchases. 
 Write a query that returns each country along with the top Genre. 
 For countries where the maximum number of purchases is shared return all Genres.
 */

 
SELECT *, max(price) AS pricr
FROM (SELECT i.BillingCountry AS country, g.Name AS  Genre Name, sum(il.UnitPrice)  As price
FROM Customer c JOIN Invoice i
ON c.CustomerId = i.CustomerId JOIN InvoiceLine il
ON i.InvoiceId =  il.InvoiceId JOIN Track t
ON il.TrackId = t.TrackId JOIN Genre G
ON T.GenreId = G.GenreId
GROUP BY i.BillingCountry, G.GenreId)
GROUP BY county ;




